on:
  workflow_call:
    inputs:
      appName:
        required: true
        type: string
    secrets:
      GCP_CREDENTIALS:
        required: true
      SLACK_WEBHOOK:
        required: true
env:
  APP_NAME: ${{ inputs.appName }}
  NEXT_PUBLIC_BASE_PATH: /ai-videos

jobs:
  DEV:
    if: github.ref == 'refs/heads/dev'
    runs-on: Linux
    #runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build-dev

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
      - name: "Upload Source to Google Cloud"     
        id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'out'
          destination: 'videos-ai-frontend-dev/ai-videos'
          parent: false

      - uses: "google-github-actions/setup-gcloud@v2"

      - name: "Invalidation cache"
        run: |
          gcloud compute url-maps invalidate-cdn-cache maika-ai-frontend --host dev.app.maika.ai --path "/*" --async

      - name: Slack Notification Success
        if: ${{ success() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} 
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':bell: FINISHED'
          SLACK_TITLE: 'Status Deploy Service Dev: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
      - name: Slack Notification Failed
        if: ${{ failure() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':x: ERROR'
          SLACK_TITLE: 'Status Deploy Service Dev: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          
  STAGING:
    if: github.ref == 'refs/heads/main'
    runs-on: Linux 
    #runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build-staging

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
      - name: "Upload Source to Google Cloud"     
        id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'out'
          destination: 'videos-ai-frontend-staging/ai-videos'
          parent: false

      - uses: google-github-actions/setup-gcloud@v2

      - name: "Invalidation cache"
        run: |
          gcloud compute url-maps invalidate-cdn-cache maika-ai-frontend --host staging.app.maika.ai --path "/*" --async

      - name: Slack Notification Success
        if: ${{ success() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} 
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':bell: FINISHED'
          SLACK_TITLE: 'Status Deploy Service Staging: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
      - name: Slack Notification Failed
        if: ${{ failure() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':x: ERROR'
          SLACK_TITLE: 'Status Deploy Service Staging: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  UAT:
    if: github.ref == 'refs/heads/pre-production'
    runs-on: Linux 
    #runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build-uat

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
      - name: "Upload Source to Google Cloud"     
        id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'out'
          destination: 'videos-ai-frontend-uat/ai-videos'
          parent: false

      - uses: google-github-actions/setup-gcloud@v2

      - name: "Invalidation cache"
        run: |
          gcloud compute url-maps invalidate-cdn-cache maika-ai-frontend --host uat.app.maika.ai --path "/*" --async

      - name: Slack Notification Success
        if: ${{ success() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} 
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':bell: FINISHED'
          SLACK_TITLE: 'Status Deploy Service UAT: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
      - name: Slack Notification Failed
        if: ${{ failure() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':x: ERROR'
          SLACK_TITLE: 'Status Deploy Service UAT: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  PRODUCTION:
    if: github.ref == 'refs/heads/production'
    runs-on: Linux 
    #runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build-production

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
      - name: "Upload Source to Google Cloud"     
        id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: 'out'
          destination: 'videos-ai-frontend-production/ai-images'
          parent: false

      - uses: google-github-actions/setup-gcloud@v2

      - name: "Invalidation cache"
        run: |
          gcloud compute url-maps invalidate-cdn-cache maika-ai-frontend --host app.maika.ai --path "/*" --async

      - name: Slack Notification Success
        if: ${{ success() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} 
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':bell: FINISHED'
          SLACK_TITLE: 'Status Deploy Service Production: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
      - name: Slack Notification Failed
        if: ${{ failure() }}
        uses: olli-ai/slack-notify-action@master
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':x: ERROR'
          SLACK_TITLE: 'Status Deploy Service Production: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
