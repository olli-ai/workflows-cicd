on:
  workflow_call:
    inputs:
      imageName:
        required: true
        type: string
      appName:
        required: true
        type: string
      approvers:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_SECRET:
        required: true
      SLACK_WEBHOOK:
        required: true
      KUBE_CONFIG_DATA:
        required: true
      TOKEN:
        required: true
env:
  # CI
  REGISTRY: harbor.jenkins-x-viettel.iviet.com
  IMAGE_NAME: ${{ inputs.imageName }}
  ENV_DEV: dev
  ENV_STG: stg 
  ENV_PRE-PROD: uat
  ENV_PROD: prod
  # CD
  RELEASE_NAME: "chart-k8s"
  APP_NAME: ${{ inputs.appName }}
  NAMESPACE_DEV: "service-dev"
  NAMESPACE_STG: "service-staging"
  NAMESPACE_PRE-PROD: "service-uat"
  NAMESPACE_PROD: "service-production"

jobs:
  DEV:
    runs-on: Linux 
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}

      - name: Generate Tag Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          bump_each_commit: true

      - name: Build & Tag & Push Docker image
        env:
          TAG: ${{steps.version.outputs.version}}
        run: |
          sed -i 's/xxx/${{env.TAG}}/g' values-dev.yaml
          docker build -t ${{env.IMAGE_NAME}}:${{env.TAG}} .
          docker tag ${{env.IMAGE_NAME}}:${{env.TAG}} ${{env.REGISTRY}}/${{env.ENV_DEV}}/${{env.IMAGE_NAME}}:${{env.TAG}}
          docker push ${{env.REGISTRY}}/${{env.ENV_DEV}}/${{env.IMAGE_NAME}}:${{env.TAG}}
