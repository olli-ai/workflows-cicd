on:
  workflow_call:
    inputs:
      imageName:
        required: true
        type: string
      appName:
        required: true
        type: string
      approvers:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_SECRET:
        required: true
      SLACK_WEBHOOK:
        required: true
      KUBE_CONFIG_DATA:
        required: true
      TOKEN:
        required: true
env:
  # CI
  REGISTRY: harbor.jenkins-x-viettel.iviet.com
  IMAGE_NAME: ${{ inputs.imageName }}
  ENV_DEV: dev
  ENV_STG: stg 
  ENV_PRE-PROD: uat
  ENV_PROD: prod
  # CD
  RELEASE_NAME: "chart-k8s"
  APP_NAME: ${{ inputs.appName }}
  NAMESPACE_DEV: "service-dev"
  NAMESPACE_STG: "service-staging"
  NAMESPACE_PRE-PROD: "service-uat"
  NAMESPACE_PROD: "service-production"

jobs:
  DEV:
    runs-on: Linux 
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
          
      - name: Helm Deploy Kubernetes
        id: helm-dev
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          TAG: ${{steps.version.outputs.version}}
        with:
          command: |
            helm repo add --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_SECRET }} ${{ env.RELEASE_NAME }} https://harbor.jenkins-x-viettel.iviet.com/chartrepo/helm-chart
            helm repo update
            helm upgrade -n ${{ env.NAMESPACE_DEV }} ${{ env.APP_NAME }} ${{ env.RELEASE_NAME }}/service -i -f values-dev.yaml
            
      - name: Slack Notification Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':bell: FINISHED'
          SLACK_TITLE: 'Status Deploy Service Dev: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
      - name: Slack Notification Failed
        if: ${{ failure() && steps.helm-dev.conclusion == 'failure' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: alert-services
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ':x: ERROR'
          SLACK_TITLE: 'Status Deploy Service Dev: ${{ env.APP_NAME }}'
          SLACK_USERNAME: devops
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
